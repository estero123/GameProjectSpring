spring.datasource.url = jdbc:mysql://localhost/spring_test2?useSSL=false&useUnicode=true&characterEncoding=utf-8
spring.datasource.username = gamecms_user
spring.datasource.password = gamecms_user
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#PostgreSQL
#spring.datasource.url = jdbc:postgresql://localhost:5432/gamecms_db
#spring.datasource.username = gamecms_user2
#spring.datasource.password = gamecms_user
#spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)



# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#switch the default error page off
server.error.whitelabel.enabled=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tylkowskiandteske@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true;
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#recaptcha
recaptcha.validation.secretKey=
